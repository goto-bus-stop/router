schema
  @link(url: "https://specs.apollo.dev/link/v1.0")
  @link(url: "https://specs.apollo.dev/join/v0.3", for: EXECUTION)
  @link(url: "https://specs.apollo.dev/source/v0.1")
  @join__schema(
    graph: SIMPLE
    directives: [
      {
        name: "sourceAPI"
        args: { name: "a", http: { baseURL: "http://localhost:8080/v1" } }
        source: {
          url: "https://specs.apollo.dev/source/v0.1"
          name: "sourceAPI"
        }
      }
    ]
  ) {
  query: Query
  mutation: Mutation
}

directive @join__schema(
  graph: join__Graph
  directives: join__FieldSet
) repeatable on SCHEMA

directive @join__enumValue(graph: join__Graph!) repeatable on ENUM_VALUE

directive @join__field(
  graph: join__Graph
  requires: join__FieldSet
  provides: join__FieldSet
  type: String
  external: Boolean
  override: String
  usedOverridden: Boolean
  directives: join__FieldSet
) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__implements(
  graph: join__Graph!
  interface: String!
) repeatable on OBJECT | INTERFACE

directive @join__type(
  graph: join__Graph!
  key: join__FieldSet
  extension: Boolean! = false
  resolvable: Boolean! = true
  isInterfaceObject: Boolean! = false
  directives: join__FieldSet
) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

directive @join__unionMember(
  graph: join__Graph!
  member: String!
) repeatable on UNION

directive @link(
  url: String
  as: String
  for: link__Purpose
  import: [link__Import]
) repeatable on SCHEMA

type Hello
  @join__type(
    graph: SIMPLE
    key: "id"
    directives: [
      {
        name: "sourceType"
        args: {
          api: "a"
          http: { GET: "/hello/{id}" }
          selection: ".data { id field }"
        }
        source: {
          url: "https://specs.apollo.dev/source/v0.1"
          name: "sourceType"
        }
      }
    ]
  ) {
  id: ID!
  field: String
  world: World
    @join__field(
      graph: SIMPLE
      directives: [
        {
          name: "sourceField"
          args: {
            api: "a"
            http: { GET: "/hello/{id}/world" }
            selection: ".data { field nested { field } }"
          }
          source: {
            url: "https://specs.apollo.dev/source/v0.1"
            name: "sourceField"
          }
        }
      ]
    )
}

scalar join__FieldSet
  @specifiedBy(url: "http://just-to-avoid-valiadation-warnings")

enum join__Graph {
  NORMAL @join__graph(name: "normal", url: "http://normal-subgraph")
  SIMPLE @join__graph(name: "simple", url: "http://connector-subgraph")
}

scalar link__Import
  @specifiedBy(url: "http://just-to-avoid-valiadation-warnings")

enum link__Purpose {
  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY

  """
  `EXECUTION` features provide metadata necessary for operation execution.
  """
  EXECUTION
}

type Mutation @join__type(graph: SIMPLE) {
  mutation(input: MutationInput): MutationOutput
    @join__field(
      graph: SIMPLE
      directives: [
        {
          name: "sourceField"
          args: {
            api: "a"
            http: {
              POST: "/mutation"
              body: """
              nums: .input.nums
              values: .input.values {
                num
              }
              """
            }
            selection: ".data { success }"
          }
          source: {
            url: "https://specs.apollo.dev/source/v0.1"
            name: "sourceField"
          }
        }
      ]
    )
}

input MutationInput @join__type(graph: SIMPLE) {
  nums: [Int!]
  values: [MutationNestedInput!]
}

input MutationNestedInput @join__type(graph: SIMPLE) {
  num: Int
}

type MutationOutput @join__type(graph: SIMPLE) {
  success: Boolean
}

type Nested @join__type(graph: SIMPLE) {
  field: String
}

type Query @join__type(graph: NORMAL) @join__type(graph: SIMPLE) {
  fieldBackedByRealResolver: TypeWithResolver @join__field(graph: NORMAL)
  hello: Hello
    @join__field(
      graph: SIMPLE
      directives: [
        {
          name: "sourceField"
          args: { api: "a", http: { GET: "/hello" }, selection: ".data { id }" }
          source: {
            url: "https://specs.apollo.dev/source/v0.1"
            name: "sourceField"
          }
        }
      ]
    )

  withArguments(value: String, done: Boolean): String
    @join__field(
      graph: SIMPLE
      directives: [
        {
          name: "sourceField"
          args: {
            api: "a"
            http: { GET: "/with-arguments?value={value}&done={done}" }
            selection: ".data"
          }
          source: {
            url: "https://specs.apollo.dev/source/v0.1"
            name: "sourceField"
          }
        }
      ]
    )
}

type TypeWithResolver @join__type(graph: NORMAL, key: "id") {
  id: ID!
}

type World @join__type(graph: SIMPLE) {
  field: String
  nested: Nested
}
